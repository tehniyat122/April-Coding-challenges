/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    
  
    int maxPathSum_util(TreeNode* root, int &result)
    {
        if(root == NULL)
        {
            return 0;
        }
        
        int left_data = maxPathSum_util(root->left, result) ;
        int right_data = maxPathSum_util(root->right, result);
        int max_val = max(max(left_data,right_data)+root->val , root->val);
        int max_value = max(max_val,root->val+left_data+right_data);
        result = max(max_value, result);
        return max_val;
    }
    int maxPathSum(TreeNode* root) {
        
        int result = INT_MIN;
        int val = maxPathSum_util(root, result);
        return result;
    }
};
